# JavaScript 初级课程讲稿生成 - 要求

## 课程背景

为JavaScript初级课程生成讲解脚本，涵盖基础概念、变量和数据类型、运算符、函数、控制流程、循环、数组、对象、DOM操作、事件处理以及小型实战项目，面向零编程基础的学习者。内容专注于JavaScript基础知识和实际应用，不涉及人工智能、机器学习或其他无关的IT主题。内容将以幻灯片形式提供（每次一页），用于逐页脚本生成。

## 核心输出要求

- 自然的口语化表达，每页幻灯片约4-5分钟时长（目标：800-900个中文字符）
- 通过贴近生活的类比和例子解释概念
- 包含互动问题和[PAUSE5]停顿标记（每页至少3次）
- 在文本中直接强调重点
- 详细解释幻灯片中的图表/插图
- 仅输出中文

## 受众考虑

- 零技术或IT背景
- 没有JavaScript或编程知识
- 需要高度易懂的解释
- 举例应符合受众理解水平
- 不允许使用任何类型的括号

## 内容指导原则

- 使用完整、自然的句子，适合音频播放
- 避免：
  - 英文单词或短语（如有必要请用中文或音译）
  - 未经解释的技术术语
  - 枚举列表
  - 括号表达式
  - 章节结尾的问答环节
  - 与前几页相似的表达
  - 谈论幻灯片的设计
  - 章节间的过渡语
  - Markdown语法如高亮等
  - 重复使用最近页面中的修辞技巧（反问句、疑问句等）
  - 无用的填充词如"好的"、"那么"等
- 包含：
  - 引用前面章节的相关内容
  - 对新例子的清晰解释
  - 始终保持对话语调
  - 直接强调重要点
  - 在连续幻灯片中使用不同的演示技巧
  - 专注于JavaScript基础主题（变量、数据类型、运算符、函数、控制流程、循环、数组、对象、DOM操作、事件处理、实战项目等）
  - 仅使用与JavaScript开发相关的类比和例子

## JavaScript特定要求

- 用生活化的比喻解释编程概念（如：变量像储物盒，函数像工具箱）
- 强调JavaScript在网页中的实际应用
- 解释代码时要逐行说明
- 用简单的日常场景类比复杂概念
- 重点说明JavaScript与用户交互的特点
- 强调实践和动手操作的重要性

## 处理要求

- 每页幻灯片生成一个脚本
- 不要合并幻灯片内容
- 脚本内容要与幻灯片内容精确匹配
- 识别并解释所有视觉元素
- 确保幻灯片间的自然流畅

## 输入格式

```
[前几页的脚本内容]
...
[当前页面内容，以图片格式提供]
```
